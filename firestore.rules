rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Check for a custom claim. This is the secure way to handle roles.
    function isAdmin() {
      return isSignedIn() && request.auth.token.role == 'admin';
    }

    // --- Rules ---

    // Users can only read/update their own profile, but can create it.
    // Admins can read any profile and list all users.
    match /users/{userId} {
      allow get, update: if isOwner(userId) || isAdmin();
      allow create: if isOwner(userId);
      allow list: if isAdmin();
      allow delete: if false; // Deleting users should be handled via backend functions for safety
    }

    // Settings are public to read, but only admins can write.
    match /settings/attendance {
      allow get: if true;
      allow update: if isAdmin();
      allow create, delete, list: if false;
    }

    // Chat messages can be read/written by the owner or an admin.
    match /chats/{studentUid}/{document=**} {
        allow read, write: if isOwner(studentUid) || isAdmin();
    }

    // Session documents can be read by any authenticated user, but only written by admins.
    match /sessions/{document=**} {
      allow read: if isSignedIn();
      allow write: if isAdmin();
    }
  }
}
