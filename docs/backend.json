
{
  "entities": {
    "User": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "User",
      "type": "object",
      "description": "Represents a user of the attendance tracking system.",
      "properties": {
        "uid": {
          "type": "string",
          "description": "Unique identifier for the user (matches Firebase Auth UID)."
        },
        "name": {
          "type": "string",
          "description": "Full name of the user."
        },
        "roll": {
          "type": "string",
          "description": "Roll number of the user (e.g., student ID)."
        },
        "email": {
          "type": "string",
          "description": "Email address of the user.",
          "format": "email"
        },
        "role": {
          "type": "string",
          "description": "Role of the user within the system (e.g., 'admin', 'viewer', 'disabled').",
          "enum": [
            "admin",
            "viewer",
            "disabled"
          ]
        },
        "userType": {
          "type": "string",
          "description": "The category of the user, for attendance purposes.",
          "enum": [
            "student",
            "resident",
            "both"
          ]
        }
      },
      "required": [
        "uid",
        "name",
        "email",
        "role",
        "userType"
      ]
    },
    "AttendanceSession": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "AttendanceSession",
      "type": "object",
      "description": "Represents a specific attendance session, typically associated with a class or event.",
      "properties": {
        "key": {
          "type": "string",
          "description": "The unique key or code associated with this attendance session, often used in QR codes."
        },
        "secondKey": {
          "type": "string",
          "description": "The unique key for the second scan."
        },
        "thirdKey": {
          "type": "string",
          "description": "The unique key for the third scan."
        },
        "totalScans": {
          "type": "number",
          "description": "The total number of scans for this session (e.g. 2, 3)."
        },
        "currentScan": {
          "type": "number",
          "description": "The current active scan number (1, 2, or 3)."
        },
        "adminUid": {
          "type": "string",
          "description": "Reference to User. Unique identifier of the admin who created the session."
        },
        "createdAt": {
          "type": "string",
          "description": "The time the session was created.",
          "format": "date-time"
        },
        "lat": {
          "type": "number",
          "description": "Latitude of the location where the attendance session is valid."
        },
        "lng": {
          "type": "number",
          "description": "Longitude of the location where the attendance session is valid."
        },
        "radius": {
          "type": "number",
          "description": "Allowed radius in meters for check-in."
        },
        "lateAfterMinutes": {
          "type": "number",
          "description": "The number of minutes after which a student is marked as late for the first scan."
        },
        "secondScanLateAfterMinutes": {
          "type": "number",
          "description": "The number of minutes after which a student is marked as late for the second scan."
        },
        "thirdScanLateAfterMinutes": {
          "type": "number",
          "description": "The number of minutes after which a student is marked as late for the third scan."
        },
        "subject": {
          "type": "string",
          "description": "The subject of the class session."
        },
         "isSelfieRequired": {
          "type": "boolean",
          "description": "Whether a selfie is required for this session (hostel mode)."
        }
      },
      "required": [
        "key",
        "adminUid",
        "createdAt",
        "lat",
        "lng",
        "radius",
        "totalScans",
        "currentScan"
      ]
    },
    "ScanData": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "ScanData",
      "type": "object",
      "description": "Represents the status and data for a single scan within an attendance record.",
      "properties": {
        "status": {
          "type": "string",
          "enum": [
            "present",
            "late",
            "absent"
          ]
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "nullable": true
        },
        "minutesLate": {
          "type": "number"
        },
        "deviceId": {
          "type": "string"
        },
        "photoURLs": {
          "type": "array",
           "items": {
            "type": "string",
            "format": "uri"
          },
          "description": "URLs of the captured selfies for this scan."
        },
        "uniqueScanKey": {
            "type": "string",
            "description": "A unique, one-time key for a specific student's scan in hostel mode."
        }
      },
      "required": [
        "status",
        "minutesLate"
      ]
    },
    "AttendanceRecord": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "AttendanceRecord",
      "type": "object",
      "description": "Represents a single attendance record for a user in a specific session.",
      "properties": {
        "student": {
          "$ref": "#/entities/User"
        },
        "scans": {
          "type": "array",
          "items": {
            "$ref": "#/entities/ScanData"
          }
        },
        "finalStatus": {
          "type": "string",
          "enum": [
            "present",
            "late",
            "absent",
            "left_early"
          ]
        },
        "correctionRequest": {
          "type": "object",
          "properties": {
            "requestedAt": {
              "type": "string",
              "format": "date-time"
            },
            "reason": {
              "type": "string"
            },
            "status": {
              "type": "string",
              "enum": [
                "pending",
                "approved",
                "denied"
              ]
            }
          }
        }
      },
      "required": [
        "student",
        "scans",
        "finalStatus"
      ]
    },
    "ChatMessage": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "ChatMessage",
      "type": "object",
      "description": "Represents a single message in a chat.",
      "properties": {
        "text": {
          "type": "string"
        },
        "senderUid": {
          "type": "string"
        },
        "senderName": {
          "type": "string"
        },
        "senderRole": {
          "type": "string",
          "enum": [
            "admin",
            "viewer"
          ]
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        },
        "isRead": {
            "type": "boolean"
        }
      },
      "required": [
        "text",
        "senderUid",
        "senderName",
        "senderRole",
        "timestamp"
      ]
    },
    "Settings": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Settings",
      "type": "object",
      "description": "Application-wide settings.",
      "properties": {
        "isSelfieRequired": {
          "type": "boolean"
        },
        "isRegistrationOpen": {
          "type": "boolean"
        }
      }
    }
  },
  "auth": {
    "providers": [
      "password"
    ],
    "claims": {
      "role": {
        "type": "string",
        "enum": ["admin", "viewer"]
      }
    }
  },
  "firestore": {
    "/users/{userId}": {
      "schema": {
        "$ref": "#/entities/User"
      },
      "description": "Stores user profile information. The 'userId' is the Firebase Authentication UID."
    },
    "/sessions/class-current": {
      "schema": {
        "$ref": "#/entities/AttendanceSession"
      },
      "description": "Stores the current active class attendance session. This is a single document."
    },
    "/sessions/class-current/records/{userId}": {
      "schema": {
        "$ref": "#/entities/AttendanceRecord"
      },
      "description": "Stores the live attendance records for each student in the currently active class session."
    },
     "/sessions/hostel-current": {
      "schema": {
        "$ref": "#/entities/AttendanceSession"
      },
      "description": "Stores the current active hostel attendance session. This is a single document."
    },
    "/sessions/hostel-current/records/{userId}": {
      "schema": {
        "$ref": "#/entities/AttendanceRecord"
      },
      "description": "Stores the live attendance records for each resident in the currently active hostel session."
    },
    "/sessions/{sessionId}": {
      "schema": {
        "$ref": "#/entities/AttendanceSession"
      },
      "description": "Stores an archived attendance session."
    },
    "/sessions/{sessionId}/records/{recordId}": {
      "schema": {
        "$ref": "#/entities/AttendanceRecord"
      },
      "description": "Stores individual attendance records for a specific historical session."
    },
    "/chats/{studentUid}/messages/{messageId}": {
      "schema": {
        "$ref": "#/entities/ChatMessage"
      },
      "description": "Stores chat messages for a specific student. Admins can access all chats."
    },
    "/settings/attendance": {
      "schema": {
        "$ref": "#/entities/Settings"
      },
      "description": "Stores application-wide settings. There is only one document with id 'attendance' in this collection."
    }
  }
}
